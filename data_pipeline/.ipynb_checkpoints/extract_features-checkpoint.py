### class contains methods for extracting particular features from app data
import re
import json

def build_api_dict(directory, app, global_dict):
    """Adds api calls and frequencies within a single file to global api dictionary and returns it
    
    :param directory : str
        Filepath to directory containing app data 
        
    :param app : str
        Name of app
        
    :param global_dict : dict
        Global api dictionary to augment
    """
    with open(directory + "/" + app + "_extract.json", "r") as f:
            codeblocks = json.load(f)

    for codeblock in codeblocks:
        for method in codeblock:
            api_call = method.split("}, ")
            if api_call[-1] not in global_dict:
                global_dict[api_call[-1]] = 1
            else:
                global_dict[api_call[-1]] += 1
    return global_dict


def build_invoke_method_dict(directory, app, global_dict):
    """Adds invoke methods and frequencies within a single file to global invoke method dictionary and returns it
    
    :param directory : str
        Filepath to directory containing app data 
        
    :param app : str
        Name of app
        
    :param global_dict : dict
        Global api dictionary to augment
    """
    with open(directory + "/" + app + "_extract.json", "r") as f:
            codeblocks = json.load(f)

    for codeblock in codeblocks:
        for method in codeblock:
            invoke = re.findall('(?<=\-)(.+?)(?=\{)', method)[0].strip()
            if invoke not in global_dict.keys():
                global_dict[invoke] = 1
            else:
                global_dict[invoke] += 1
    return global_dict