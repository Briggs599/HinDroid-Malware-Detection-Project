import re

def build_api_dict(app_in_list):
    #dictionary for each app where keys are API calls and values are frequencies
    app_api_dict = {}

    d = prep_files(app_in_list)
    splits = d.split(".end method") #list of codeblocks
    for cb in splits:
        result = re.findall('invoke-.+', cb) #list of methods in codeblock
        for call in result:
            name = call.split("}, ")
            if name[-1] not in app_api_dict:
                app_api_dict[name[-1]] = 1
            else:
                app_api_dict[name[-1]] += 1
    return app_api_dict

def build_invoke_type_dict(app_in_list):
    #dictionary for each app where keys are invoke methods and values are frequencies
    app_invoke_type_dict = {}

    d = prep_files(app_in_list)
    splits = d.split(".end method") #list of codeblocks
    #print(splits)
    for cb in splits:
        result = re.findall('invoke-.+', cb) #list of methods in codeblock
        #print(result)
        for call in result:
            method = re.findall('(?<=\-)(.+?)(?=\{)', call)[0].strip()
            #print(method)
            if method not in app_invoke_type_dict.keys():
                app_invoke_type_dict[method] = 1
            else:
                app_invoke_type_dict[method] += 1
    return app_invoke_type_dict